all:
SELECT
  articles.id,
  articles.feed_id,
  articles.title,
  articles.author,
  articles.url,
  SUBSTR(articles.summary, 1, 250),
  articles.image_url,
  articles.published_at,
  feeds.title AS feed_title,
  feeds.favicon_url,
  feeds.open_articles_in_browser,
  article_statuses.updated_at,
  article_statuses.starred,
  article_statuses.read
FROM articles
JOIN feeds ON articles.feed_id = feeds.id
JOIN article_statuses ON articles.id = article_statuses.article_id
WHERE ((article_statuses.read = :read AND article_statuses.last_read_at IS NULL OR article_statuses.last_read_at >= :lastReadAt) OR :read IS NULL)
AND (article_statuses.starred = :starred OR :starred IS NULL)
AND (articles.title LIKE '%' || :query || '%' OR articles.summary  LIKE '%' || :query || '%' OR :query IS NULL)
GROUP BY articles.id
ORDER BY CASE WHEN :newestFirst THEN articles.published_at ELSE (-1 * articles.published_at) END DESC
LIMIT :limit OFFSET :offset;

findPages:
WITH RECURSIVE article_indices(
    previous_article_id,
    article_page,
    article_id,
    next_article_id
) AS (
    SELECT
      LAG(articles.id) OVER(ORDER BY CASE WHEN :newestFirst THEN articles.published_at ELSE (-1 * articles.published_at) END DESC),
      ROW_NUMBER() OVER(ORDER BY CASE WHEN :newestFirst THEN articles.published_at ELSE (-1 * articles.published_at) END DESC),
      articles.id,
      LEAD(articles.id) OVER(ORDER BY CASE WHEN :newestFirst THEN articles.published_at ELSE (-1 * articles.published_at) END DESC)
    FROM articles
    JOIN feeds ON articles.feed_id = feeds.id
    JOIN article_statuses ON articles.id = article_statuses.article_id
    WHERE ((article_statuses.read = :read AND article_statuses.last_read_at IS NULL OR article_statuses.last_read_at >= :lastReadAt) OR :read IS NULL)
    AND (article_statuses.starred = :starred OR :starred IS NULL)
    AND (articles.title LIKE '%' || :query || '%' OR articles.summary  LIKE '%' || :query || '%' OR :query IS NULL)
    GROUP BY articles.id
    ORDER BY CASE WHEN :newestFirst THEN articles.published_at ELSE (-1 * articles.published_at) END DESC
)
SELECT
  previous_article_id,
  article_page -1 AS current_index,
  next_article_id,
  (SELECT COUNT(*) FROM article_indices) AS total_count
 FROM article_indices
 WHERE article_id = :articleID;

countAll:
SELECT COUNT(*)
FROM articles
JOIN article_statuses ON articles.id = article_statuses.article_id
WHERE ((article_statuses.read = :read AND article_statuses.last_read_at IS NULL OR article_statuses.last_read_at >= :lastReadAt) OR :read IS NULL)
AND (article_statuses.starred = :starred OR :starred IS NULL)
AND (articles.title LIKE '%' || :query || '%' OR articles.summary  LIKE '%' || :query || '%' OR :query IS NULL);

findArticleIDs:
WITH RECURSIVE article_indices(
    article_index,
    article_id,
    read
) AS (
    SELECT
      ROW_NUMBER() OVER(ORDER BY CASE WHEN :newestFirst THEN articles.published_at ELSE (-1 * articles.published_at) END DESC) - 1,
      articles.id,
      read
    FROM articles
    JOIN feeds ON articles.feed_id = feeds.id
    JOIN article_statuses ON articles.id = article_statuses.article_id
    WHERE (article_statuses.starred = :starred OR :starred IS NULL)
    AND (articles.title LIKE '%' || :query || '%' OR articles.summary  LIKE '%' || :query || '%' OR :query IS NULL)
    GROUP BY articles.id
    ORDER BY CASE WHEN :newestFirst THEN articles.published_at ELSE (-1 * articles.published_at) END DESC
)
SELECT article_id
FROM article_indices
WHERE read != 1
AND (
  :afterArticleID IS NULL
  OR article_indices.article_index <= (
      SELECT article_index
      FROM article_indices
      WHERE article_id = :afterArticleID
      LIMIT 1
  )
)
AND (:beforeArticleID IS NULL
  OR article_index >= (
      SELECT article_index
      FROM article_indices
      WHERE article_id = :beforeArticleID
      LIMIT 1
  )
);
