countByStatus:
SELECT COUNT(*)
FROM articles
JOIN article_statuses ON articles.external_id = article_statuses.external_id
WHERE ((article_statuses.read = :read AND article_statuses.last_read_at IS NULL OR article_statuses.last_read_at >= :lastReadAt) OR :read IS NULL)
AND (article_statuses.starred = :starred OR :starred IS NULL);

findByStatus:
SELECT
  articles.*,
  article_statuses.arrived_at,
  article_statuses.starred,
  article_statuses.read
FROM articles
JOIN article_statuses ON articles.external_id = article_statuses.external_id AND article_statuses.feed_id = articles.feed_id
WHERE ((article_statuses.read = :read AND article_statuses.last_read_at IS NULL OR article_statuses.last_read_at >= :lastReadAt) OR :read IS NULL)
AND (article_statuses.starred = :starred OR :starred IS NULL)
ORDER BY article_statuses.arrived_at DESC
LIMIT :limit OFFSET :offset;

countByFeeds:
SELECT COUNT(*)
FROM articles
JOIN article_statuses ON articles.external_id = article_statuses.external_id AND article_statuses.feed_id = articles.feed_id
WHERE articles.feed_id IN :feedIDs
AND ((article_statuses.read = :read AND article_statuses.last_read_at IS NULL OR article_statuses.last_read_at >= :lastReadAt) OR :read IS NULL)
AND (article_statuses.starred = :starred OR :starred IS NULL);

findByFeeds:
SELECT
  articles.*,
  article_statuses.arrived_at,
  article_statuses.starred,
  article_statuses.read
FROM articles
JOIN article_statuses ON articles.external_id = article_statuses.external_id AND article_statuses.feed_id = articles.feed_id
WHERE articles.feed_id IN :feedIDs
AND ((article_statuses.read = :read AND article_statuses.last_read_at IS NULL OR article_statuses.last_read_at >= :lastReadAt) OR :read IS NULL)
AND (article_statuses.starred = :starred OR :starred IS NULL)
ORDER BY article_statuses.arrived_at DESC
LIMIT :limit OFFSET :offset;

findBy:
SELECT
  articles.*,
  article_statuses.arrived_at,
  article_statuses.starred,
  article_statuses.read
FROM articles
JOIN article_statuses ON articles.external_id = article_statuses.external_id AND article_statuses.feed_id = articles.feed_id
WHERE articles.id = :articleID
LIMIT 1;

findByExternalID:
SELECT
  articles.*,
  article_statuses.arrived_at,
  article_statuses.starred,
  article_statuses.read
FROM articles
JOIN article_statuses ON articles.external_id = article_statuses.external_id AND article_statuses.feed_id = articles.feed_id
WHERE articles.external_id = :externalID AND articles.feed_id = :feedID
LIMIT 1;

create:
INSERT OR IGNORE INTO articles(
    feed_id,
    external_id,
    title,
    content_html,
    url,
    summary,
    image_url,
    published_at
)
VALUES (
:feed_id,
:external_id,
:title,
:content_html,
:url,
:summary,
:image_url,
:published_at
);

updateStatus:
INSERT OR IGNORE INTO article_statuses(
  feed_id,
  external_id,
  arrived_at
)
VALUES (
:feed_id,
:external_id,
:arrived_at
);

markRead:
UPDATE article_statuses SET read = :read, last_read_at = :lastReadAt
WHERE EXISTS (
  SELECT id
  FROM articles
  WHERE articles.id = :articleID
  AND articles.external_id = article_statuses.external_id AND article_statuses.feed_id = articles.feed_id
  LIMIT 1
);
