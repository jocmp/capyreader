findByStatus:
SELECT
  articles.*,
  feeds.title AS feed_title,
  article_statuses.updated_at,
  article_statuses.starred,
  article_statuses.read
FROM articles
JOIN feeds ON articles.feed_id = feeds.id
JOIN article_statuses ON articles.id = article_statuses.article_id
WHERE ((article_statuses.read = :read AND article_statuses.last_read_at IS NULL OR article_statuses.last_read_at >= :lastReadAt) OR :read IS NULL)
AND (article_statuses.starred = :starred OR :starred IS NULL)
GROUP BY articles.id
ORDER BY articles.published_at DESC
LIMIT :limit OFFSET :offset;

findByFeeds:
SELECT
  articles.*,
  feeds.title AS feed_title,
  article_statuses.updated_at,
  article_statuses.starred,
  article_statuses.read
FROM articles
JOIN article_statuses ON articles.id = article_statuses.article_id
JOIN feeds ON articles.feed_id = feeds.id
WHERE articles.feed_id IN :feedIDs
AND ((article_statuses.read = :read AND article_statuses.last_read_at IS NULL OR article_statuses.last_read_at >= :lastReadAt) OR :read IS NULL)
AND (article_statuses.starred = :starred OR :starred IS NULL)
GROUP BY articles.id
ORDER BY articles.published_at DESC
LIMIT :limit OFFSET :offset;

countByFeeds:
SELECT COUNT(*)
FROM articles
JOIN article_statuses ON articles.id = article_statuses.article_id
WHERE articles.feed_id IN :feedIDs
AND ((article_statuses.read = :read AND article_statuses.last_read_at IS NULL OR article_statuses.last_read_at >= :lastReadAt) OR :read IS NULL)
AND (article_statuses.starred = :starred OR :starred IS NULL);

countByStatus:
SELECT COUNT(*)
FROM articles
JOIN article_statuses ON articles.id = article_statuses.article_id
WHERE ((article_statuses.read = :read AND article_statuses.last_read_at IS NULL OR article_statuses.last_read_at >= :lastReadAt) OR :read IS NULL)
AND (article_statuses.starred = :starred OR :starred IS NULL);

findBy:
SELECT
  articles.*,
  feeds.title AS feed_title,
  article_statuses.updated_at,
  article_statuses.starred,
  article_statuses.read
FROM articles
JOIN feeds ON articles.feed_id = feeds.id
JOIN article_statuses ON articles.id = article_statuses.article_id
WHERE articles.id = :articleID
LIMIT 1;

countAll:
SELECT
 articles.feed_id,
 COUNT(DISTINCT articles.id)
FROM articles
JOIN article_statuses ON articles.id = article_statuses.article_id
WHERE article_statuses.read = :read OR :read IS NULL
AND (article_statuses.starred = :starred OR :starred IS NULL)
GROUP BY articles.feed_id;

lastUpdatedAt:
SELECT MAX(article_statuses.updated_at)
FROM article_statuses;

create:
INSERT OR REPLACE INTO articles(
    id,
    feed_id,
    title,
    content_html,
    url,
    summary,
    image_url,
    published_at
)
VALUES (
:id,
:feed_id,
:title,
:content_html,
:url,
:summary,
:image_url,
:published_at
);

updateStatus:
INSERT OR IGNORE INTO article_statuses(
  article_id,
  updated_at
)
VALUES (
:article_id,
:updated_at
);

markRead:
UPDATE article_statuses SET read = :read, last_read_at = :lastReadAt, updated_at = :updatedAt
WHERE article_statuses.article_id = :articleID;

markStarred:
UPDATE article_statuses SET starred = :starred, updated_at = :updatedAt
WHERE article_statuses.article_id = :articleID;
